ext {
    supportLibVersion = '28.0.0'
    daggerVersion = '2.19'
    guavaVersion = '19.0'
    javaxAnnotaionVersion = '10.0-b28'
    multidexVersion = '1.0.1'
    okHttpVersion = '3.11.0'
    curlLoggerInterceptorVersion = '0.1'
    chuckVersion = '1.1.0'
    retrofitVersion = '2.1.0'
    rxAndroidVersion = '1.2.0'
    rxJavaVersion = '1.3.0'
    firebaseVersion = '12.0.1'
    greenRobotEventBusVersion = '3.0.0'
    gsonVersion = '2.8.0'
    junitVersion = '4.12'
    mockitoVersion = '2.10.0'
    testRunnerVersion = '0.5'
    testRuleVersion = '0.5'
    espressoVersion = '2.2.2'
    mockWebServerVersion = '3.11.0'
    dexMakerMockitoVersion = '1.2'
    robolectricVersion = '3.0'
    playServicesVersion = '12.0.1'
    zxingVersion = '3.5.0'
    nanowidget = '1.6.9.3'
    glideVersion = '3.8.0'
    glideOkHttpIntegrationVersion = '1.5.0'
    crashLyticsVersion = '2.7.1@aar'
    cleverTapVersion = '3.1.6'
    roomVersion = '1.1.0-beta3'
    uCropVersion = '2.2.2-native'
    circleImageViewVersion = '2.2.0'
    deepLinkVersion = '3.1.1'
    asphaltVersion = '0.9.0'
    constraintVersion = '1.1.3'
    mockitoKotlin = '2.0.0'

    supportDependencies = [
            appCompact: "com.android.support:appcompat-v7:${supportLibVersion}",
            design    : "com.android.support:design:${supportLibVersion}",
            cardView  : "com.android.support:cardview-v7:${supportLibVersion}"
    ]

    libraries = [
            dagger                   : "com.google.dagger:dagger:${daggerVersion}",
            daggerCompiler           : "com.google.dagger:dagger-compiler:${daggerVersion}",
            daggerAndroid            : "com.google.dagger:dagger-android:${daggerVersion}",
            daggerAndroidSupport     : "com.google.dagger:dagger-android-support:${daggerVersion}",
            daggerAndroidCompiler    : "com.google.dagger:dagger-android-processor:${daggerVersion}",
            guava                    : "com.google.guava:guava:${guavaVersion}",
            javaxAnnotation          : "org.glassfish:javax.annotation:${javaxAnnotaionVersion}",
            multidex                 : "com.android.support:multidex:${multidexVersion}",
            okHttp                   : "com.squareup.okhttp3:okhttp:${okHttpVersion}",
            okHttpLogging            : "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}",
            okHttpUrlConnection      : "com.squareup.okhttp3:okhttp-urlconnection:${okHttpVersion}",
            curlLoggerInterceptor    : "com.github.grapesnberries:curlloggerinterceptor:${curlLoggerInterceptorVersion}",
            chuck                    : "com.readystatesoftware.chuck:library:${chuckVersion}",
            retrofit                 : "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            retrofitGson             : "com.squareup.retrofit2:converter-gson:${retrofitVersion}",
            retrofitRx               : "com.squareup.retrofit2:adapter-rxjava:${retrofitVersion}",
            rxAndroid                : "io.reactivex:rxandroid:${rxAndroidVersion}",
            rxJava                   : "io.reactivex:rxjava:${rxJavaVersion}",
            gson                     : "com.google.code.gson:gson:${gsonVersion}",
            firebaseCore             : "com.google.firebase:firebase-core:${firebaseVersion}",
            firebaseMessaging        : "com.google.firebase:firebase-messaging:${firebaseVersion}",
            firebaseConfig           : "com.google.firebase:firebase-config:${firebaseVersion}",
            greenRobotEventBus       : "org.greenrobot:eventbus:${greenRobotEventBusVersion}",
            zxing                    : "com.journeyapps:zxing-android-embedded:${zxingVersion}",
            nanowidget               : "com.nanorep:nanowidget:${nanowidget}",
            glide                    : "com.github.bumptech.glide:glide:${glideVersion}",
            glideOkhttpIntegration   : "com.github.bumptech.glide:okhttp3-integration:${glideOkHttpIntegrationVersion}",
            crashlytics              : "com.crashlytics.sdk.android:crashlytics:${crashLyticsVersion}",
            kotlin                   : "org.jetbrains.kotlin:kotlin-stdlib:${kotlin_version}",
            anko                     : "org.jetbrains.anko:anko-commons:${anko_version}",
            cleverTap                : "com.clevertap.android:clevertap-android-sdk:${cleverTapVersion}",
            roomRuntime              : "android.arch.persistence.room:runtime:${roomVersion}",
            roomCompiler             : "android.arch.persistence.room:compiler:${roomVersion}",
            uCrop                    : "com.github.yalantis:ucrop:${uCropVersion}",
            circleImageView          : "de.hdodenhof:circleimageview:${circleImageViewVersion}",
            deepLink                 : "com.airbnb:deeplinkdispatch:${deepLinkVersion}",
            deepLinkDispatchProcessor: "com.airbnb:deeplinkdispatch-processor:${deepLinkVersion}",
            asphalt                  : "com.gojek.android:asphalt:${asphaltVersion}",
            constraintLayout         : "com.android.support.constraint:constraint-layout:${constraintVersion}"

    ]

    testSupportDependencies = [
            runner         : "com.android.support.test:runner:${testRunnerVersion}",
            rules          : "com.android.support.test:rules:${testRuleVersion}",
            espressoCore   : "com.android.support.test.espresso:espresso-core:${espressoVersion}",
            espressoIntents: "com.android.support.test.espresso:espresso-intents:${espressoVersion}",
            espressoContrib: "com.android.support.test.espresso:espresso-contrib:${espressoVersion}"
    ]

    testLibraries = [
            junit                    : "junit:junit:${junitVersion}",
            mockWebServer            : "com.squareup.okhttp3:mockwebserver:$mockWebServerVersion",
            mockitoCore              : "org.mockito:mockito-core:${mockitoVersion}",
            dexMakerMockito          : "com.google.dexmaker:dexmaker-mockito:${dexMakerMockitoVersion}",
            robolectric              : "org.robolectric:robolectric:${robolectricVersion}",
            robolectricShadowsSupport: "org.robolectric:shadows-support-v4:${robolectricVersion}",
            kotlinStdLib             : "org.jetbrains.kotlin:kotlin-stdlib:${kotlin_version}",
            kotlinTestJunit          : "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
            mockitoKotlin            : "com.nhaarman.mockitokotlin2:mockito-kotlin:${mockitoKotlin}"
    ]
}